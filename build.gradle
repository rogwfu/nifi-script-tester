/*******************************************************************************
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ******************************************************************************/
plugins {
    id 'application'
    id 'com.jfrog.bintray' version '1.6'
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

version = '1.1.2'
description = "A project to create a stub/mock environment for testing ExecuteScript processors"
group = 'mattyb149'
status = 'RELEASE'
project.ext.apiKey = System.getenv('BINTRAY_API_KEY') ?: System.getProperty('BINTRAY_API_KEY')

repositories {
    mavenCentral()
    jcenter()
}


dependencies {
//    compile 'org.apache.nifi:nifi-api:0.6.1'
//    compile 'org.apache.nifi:nifi-mock:0.6.1'
    compile 'org.apache.nifi:nifi-api:1.3.0'
    compile 'org.apache.nifi:nifi-mock:1.3.0'
    testCompile 'junit:junit:4.12'
    runtime 'commons-io:commons-io:2.4'
    runtime 'junit:junit:4.12'
    runtime 'org.slf4j:slf4j-log4j12:1.7.14'

    // script engine(s)
    runtime 'org.codehaus.groovy:groovy-all:2.4.6'
    runtime 'org.python:jython-standalone:2.7.0'
}

mainClassName = 'nifi.ScriptRunner'


// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            if (plugins.hasPlugin('war')) {
                from components.web
            } else {
                from components.java
            }

            artifact sourcesJar
            artifact javadocJar
            artifact shadowJar
        }
    }
}


bintray {
    user = System.getProperty('BINTRAY_USER') ?: 'mattyb149'
    key = project.ext.apiKey
    //configurations = ['default']
    publications = ['mavenJava']
    filesSpec {
        from 'files'
        into 'standalone_files/level1'
        rename '(.+)\\.(.+)', '$1-suffix.$2'
    }

    dryRun = false
    pkg {
        repo = 'maven'
        userOrg = group
        name = project.name
        desc = project.description
        websiteUrl = 'https://github.com/mattyb149/nifi-script-tester'
        issueTrackerUrl = 'https://github.com/mattyb149/nifi-script-tester/issues'
        vcsUrl = 'https://github.com/mattyb149/nifi-script-tester.git'
        licenses = ['Apache-2.0']
        labels = ['apache', 'nifi', 'groovy']
        attributes = ['plat': ['linux', 'osx']]
        publicDownloadNumbers = true
        version {
            vcsTag = project.version
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.5"
}
